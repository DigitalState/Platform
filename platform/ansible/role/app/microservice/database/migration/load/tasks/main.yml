---
- block:
    - name: Backup microservice database migration file
      copy:
        src: '/srv/microservice/src/AppBundle/Resources/migrations/{{ _file.key|replace(".", "_") }}.yml'
        remote_src: yes
        dest: '/srv/microservice/src/AppBundle/Resources/migrations/_{{ _file.key|replace(".", "_") }}.yml'
      with_dict: '{{ _data }}'
      loop_control:
        loop_var: _file
      no_log: yes
    - name: Create custom microservice database migration file
      copy:
        dest: '/srv/microservice/src/AppBundle/Resources/migrations/{{ _file.key|replace(".", "_") }}.yml'
        content: '{{ _file.value|to_nice_yaml }}'
      with_dict: '{{ _data }}'
      loop_control:
        loop_var: _file
      no_log: yes
    - name: Load microservice database migration
      shell:
        cmd: 'docker-compose exec -T php php bin/console doctrine:migrations:migrate {{ "" if _version is none else _version|replace(".", "_") }} --no-interaction'
        chdir: /srv/microservice
    # The restore backup task below runs before docker-compose above finishes executing. Look into fixing this.
    - name: Pause while microservice database migration loads
      pause:
        seconds: 15
    - name: Delete custom microservice database migration file
      file:
        path: '/srv/microservice/src/AppBundle/Resources/migrations/{{ _file.key|replace(".", "_") }}.yml'
        state: absent
      with_dict: '{{ _data }}'
      loop_control:
        loop_var: _file
      no_log: yes
    - name: Restore microservice database migration file
      copy:
        src: '/srv/microservice/src/AppBundle/Resources/migrations/_{{ _file.key|replace(".", "_") }}.yml'
        remote_src: yes
        dest: '/srv/microservice/src/AppBundle/Resources/migrations/{{ _file.key|replace(".", "_") }}.yml'
      with_dict: '{{ _data }}'
      loop_control:
        loop_var: _file
      no_log: yes
    - name: Remove backup microservice database migration file
      file:
        path: '/srv/microservice/src/AppBundle/Resources/migrations/_{{ _file.key|replace(".", "_") }}.yml'
        state: absent
      with_dict: '{{ _data }}'
      loop_control:
        loop_var: _file
      no_log: yes
  tags: [microservice]
